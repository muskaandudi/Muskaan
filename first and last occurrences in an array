// FIRST AND LAST OCCURENCES

class Solution {
public:
    int firstOcc(vector<int> &nums, int key){
        int start = 0;
        int end = nums.size()-1;
        int ans = -1;
        
        while(start<=end){
            int mid = start + (end-start)/2;
            if(nums[mid] == key){
                ans = mid;
                end = mid-1;
            }
            else if(nums[mid] > key){
                end = mid-1;
            }
            else{
                start = mid+1;
            }
        }
        
        return ans;
    }
    
    int lastOcc(vector<int> &nums, int key){
        int start = 0;
        int end = nums.size()-1;
        int ans = -1;
        
        while(start<=end){
            int mid = start + (end-start)/2;
            
            if(nums[mid] == key){
                ans = mid;
                start = mid+1;
            }
            else if(nums[mid] > key){
                end = mid-1;
            }
            else{
                start = mid+1;
            }
        }
        
        return ans;
    }
    
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        ans.push_back(firstOcc(nums, target));
        ans.push_back(lastOcc(nums, target));
        return ans;
    }
};
